import type { Metadata } from "next";
import localFont from "next/font/local";
import { Footer, Header, Navigation } from "@/components/sections";
import { EffectorNext } from "@effector/next";

import "normalize.css";
import "../styles/globals.scss";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const manrope = localFont({
  src: [
    {
      path: "../public/fonts/Manrope/Manrope-Thin.woff",
      weight: "200",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-Light.woff",
      weight: "300",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-Regular.woff",
      weight: "400",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-Medium.woff",
      weight: "500",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-Semibold.woff",
      weight: "600",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-Bold.woff",
      weight: "700",
      style: "normal",
    },
    {
      path: "../public/fonts/Manrope/Manrope-ExtraBold.woff",
      weight: "800",
      style: "normal",
    },
  ],
  variable: "--font-manrope",
});

const firs = localFont({
  src: [
    {
      path: "../public/fonts/TTFirsNeue/TTFirsNeue-Thin.woff",
      weight: "100",
      style: "normal",
    },
    {
      path: "../public/fonts/TTFirsNeue/TTFirsNeue-Light.woff",
      weight: "200",
      style: "normal",
    },
    {
      path: "../public/fonts/TTFirsNeue/TTFirsNeue-Regular.woff",
      weight: "400",
      style: "normal",
    },
    {
      path: "../public/fonts/TTFirsNeue/TTFirsNeue-Medium.woff",
      weight: "500",
      style: "normal",
    },
    {
      path: "../public/fonts/TTFirsNeue/TTFirsNeue-DemiBold.woff",
      weight: "600",
      style: "normal",
    },
  ],
  variable: "--font-firs",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <EffectorNext>
      <html lang="ru">
        <body className={`${firs.variable} ${manrope.variable}`}>
          <Navigation isOpen={false} />
          <Header />
          {children}
          <Footer />
        </body>
      </html>
    </EffectorNext>
  );
}
